worker_processes 1;

pcre_jit on;

include /etc/nginx/modules/*.conf;
load_module /etc/nginx/modules/ngx_http_opentracing_module.so;

worker_rlimit_nofile 32768;

events {
    worker_connections 4096;
    multi_accept       on;
    use                epoll;
}

env API_SKEDULO_IDENTIFIER;
env API_SKEDULO_PUBLIC_CERT;
env API_SKEDULO_ISSUER;

http {
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;

    server_tokens off;

    client_max_body_size 100m;

    keepalive_timeout 65;

    aio threads;
    directio 100k;
    output_buffers 2 1M;

    sendfile on;
    sendfile_max_chunk 512k;

    tcp_nodelay on;
    tcp_nopush on;

    gzip on;
    gzip_comp_level 5;
    gzip_min_length 100;
    gzip_http_version 1.1;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;

    log_format main '{{ api_nginx_log_format }}';

    error_log /dev/stdout warn;
    access_log /dev/stdout main;

    map $msec $time_millis {
       ~[0-9]+\.(?P<millis>[0-9][0-9][0-9]) $millis;
    }

    map $time_iso8601 $time_date_time {
      "~^(?<datetime>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})"   $datetime;
    }

    map $time_iso8601 $time_zone {
      "~^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?<zone>.*)$"    $zone;
    }

    # Retain the default nginx handling of requests without a "Connection" header
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # trust http_x_forwarded_proto headers correctly indicate ssl offloading
    map $http_x_forwarded_proto $pass_access_scheme {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    map $http_x_forwarded_port $pass_server_port {
        default $http_x_forwarded_port;
        ''      $server_port;
    }

    map $pass_server_port $pass_port {
        443              443;
        default          $pass_server_port;
    }

    # Obtain best http host
    map $http_host $this_host {
        default          $http_host;
        ''               $host;
    }

    map $http_x_forwarded_host $best_http_host {
        default          $http_x_forwarded_host;
        ''               $this_host;
    }

    map $http_x_org_id $log_org_id {
        default $http_x_org_id;
        ''      "-";
    }

    map $http_x_user_id $log_user_id {
        default $http_x_user_id;
        ''      "-";
    }

    # Reverse proxies can detect if a client provides a X-Request-ID header, and pass it on to the backend server.
    # If no such header is provided, it can provide a random value.
    map $http_x_request_id $req_id {
        default   $http_x_request_id;
        ""        $request_id;
    }

    lua_package_path "/etc/nginx/lua/?.lua;/etc/nginx/lua/vendor/?.lua;/usr/local/lib/lua/?.lua;/usr/local/openresty/site/lualib/?.lua;;";
    lua_package_cpath "/usr/local/openresty/lualib/?.so;/usr/local/lib/lua/?.so;/usr/lib/lua-platform-path/lua/5.1/?.so;;";

    # Enable tracing for all requests.
    opentracing_load_tracer /usr/local/lib/libzipkintracing_plugin.so /etc/nginx/conf/zipkin-nginx-conf.json;
    opentracing on;

    # Optionally, set additional tags.
    opentracing_tag http_user_agent $http_user_agent;
    opentracing_tag request_id $req_id;
    opentracing_tag user_id $log_user_id;
    opentracing_tag org_id $log_org_id;

    include /etc/nginx/metrics.conf;
    include /etc/nginx/conf.d/*.conf;
}
